<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 命名空间，对sql进行分类化管理（sql隔离） -->
<mapper namespace="com.inschos.yunda.data.mapper.StaffPersonMapper">

    <insert id="addStaffPerson" parameterType="StaffPerson" useGeneratedKeys="true" keyProperty="id">
        insert into staff_person(`cust_id`,`account_uuid`,`manager_uuid`,`name`,`papers_type`,`papers_code`,`phone`,`login_token`,`created_at`,`updated_at`)
        values(#{cust_id},#{account_uuid},#{manager_uuid},#{name},#{papers_type},#{papers_code},#{phone},#{login_token},#{created_at},#{updated_at})
    </insert>

    <!--基础类型 不支持空,如需要查询,可以用封装类来接值.然后再做封装类和基础类型的转换-->
    <!--封装类:java.lang.Long java.lang.Integer -->
    <select id="findStaffPersonId" parameterType="StaffPerson" resultType="java.lang.Long">
        select `cust_id`
        from staff_person
        <where>
            name =#{name} AND papers_type =#{papers_type} AND papers_code =#{papers_code} AND phone =#{phone}
        </where>
    </select>

    <select id="findStaffPersonInfoById" parameterType="StaffPerson" resultType="StaffPerson">
        select
        `cust_id`,`account_uuid`,`manager_uuid`,`name`,`papers_type`,`papers_code`,`phone`,`login_token`,`created_at`,`updated_at`
        from staff_person
        <where>
            cust_id =#{cust_id} AND account_uuid =#{account_uuid}
        </where>
    </select>

    <select id="findStaffPersonInfoByCode" parameterType="StaffPerson" resultType="StaffPerson">
        select
        `cust_id`,`account_uuid`,`manager_uuid`,`name`,`papers_type`,`papers_code`,`phone`,`login_token`,`created_at`,`updated_at`
        from staff_person
        <where>
            name =#{name} AND papers_type =#{papers_type} AND papers_code =#{papers_code} AND phone =#{phone}
        </where>
        limit 1;
    </select>

</mapper>